package main

import (
	"log"
	"net/http"
	"os"

	"labflux-functions/internal"
	"labflux-functions/pkg/database"
	_ "labflux-functions/docs" // This will be generated by swag
)

// @title LabFlux Functions API
// @version 1.0
// @description A serverless API for laboratory management with multi-tenancy support.
// @termsOfService http://swagger.io/terms/

// @contact.name LabFlux API Support
// @contact.url http://www.labflux.com/support
// @contact.email support@labflux.com

// @license.name MIT
// @license.url https://opensource.org/licenses/MIT

// @host localhost:8080
// @BasePath /api

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description Type "Bearer" followed by a space and JWT token.

func main() {
	// Initialize database
	if err := database.Initialize(); err != nil {
		log.Fatalf("Failed to initialize database: %v", err)
	}

	// Setup router
	router := internal.SetupRouter()

	// Get port from environment or default to 8080
	port := os.Getenv("PORT")
	if port == "" {
		port = "8080"
	}

	log.Printf("Server starting on port %s", port)
	log.Printf("Health check: http://localhost:%s/health", port)
	log.Printf("API endpoints: http://localhost:%s/api/", port)
	log.Printf("Swagger UI: http://localhost:%s/swagger/", port)
	
	if err := http.ListenAndServe(":"+port, router); err != nil {
		log.Fatalf("Server failed to start: %v", err)
	}
}
